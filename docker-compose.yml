services:
  python_app:
    build: ./python_app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.python_app.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.python_app.entrypoints=web"
      - "traefik.http.services.python_app.loadbalancer.server.port=5000"
    env_file:
      - ./python_app/.env
    depends_on:
      - db
    volumes:
      - ./python_app:/app

  frontend:
    build: ./frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    depends_on:
      - python_app

  traefik:
    image: traefik:v3.0
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  db:
    image: postgres:16
    restart: always
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:
